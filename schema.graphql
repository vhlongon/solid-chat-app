type User {
  id: ID!
  username: String!
  email: String!
  imageUrl: String!
  messages: [Message!]
}

type Message {
  id: ID!
  content: String!
  author: User!
  createdAt: String!
  isOwner: Boolean!
}

type Query {
  users: [User!]
  user(id: ID!): User
  messages: [Message!]
  message(id: ID!): Message
  me: User
  authUrl: String
}

type AuthPayload {
  token: String
  user: User
}

type Mutation {
  createMessage(content: String!, userId: ID!): Message!
  deleteMessage(id: ID!): Boolean!
  updateMessage(id: ID!, content: String!): Message!
  authenticate(accessCode: String!): AuthPayload
  verifyAuth(token: String!): User
}

type Subscription {
  messages: [Message]!
}
